# {{ ansible_managed }}

description "Airflow webserver daemon"

start on started networking
stop on (deconfiguring-networking or runlevel [016])

respawn
respawn limit unlimited

chdir {{ airflow_config.home.path }}
setuid {{ airflow_config.user.name }}
setgid {{ airflow_config.user.group }}

# Define environment variables
env AIRFLOW_HOME="{{ airflow_config.home.path }}"
env AIRFLOW_CONFIG="${AIRFLOW_HOME}/airflow.cfg"
env AIRFLOW_BINARY_PATH="{{ airflow_config.environment.virtualenv ~ '/bin' }}"
env AIRFLOW_WEBSERVER_PORT="{{ airflow_config.webserver.web_server_port }}"
env AIRFLOW_WEBSERVER_WORKERS="{{ airflow_config.webserver.workers }}"
env AIRFLOW_WEBSERVER_WORKER_CLASS="{{ airflow_config.webserver.worker_class }}"
env AIRFLOW_WEBSERVER_WORKER_TIMEOUT="{{ airflow_config.webserver.web_server_worker_timeout }}"
env AIRFLOW_WEBSERVER_HOSTNAME="{{ airflow_config.webserver.web_server_host }}"
env AIRFLOW_WEBSERVER_PID_FILE="{{ airflow_config.scheduler.pid_file }}"
env AIRFLOW_WEBSERVER_LOG_FILE="{{ airflow_config.scheduler.log_file }}"
{% if airflow_webserver_debug %}
env AIRFLOW_WEBSERVER_DEBUG="--debug"
{% endif %}

export AIRFLOW_CONFIG
export AIRFLOW_HOME
export AIRFLOW_BINARY_PATH
export AIRFLOW_WEBSERVER_PORT
export AIRFLOW_WEBSERVER_WORKERS
export AIRFLOW_WEBSERVER_WORKER_CLASS
export AIRFLOW_WEBSERVER_WORKER_TIMEOUT
export AIRFLOW_WEBSERVER_HOSTNAME
export AIRFLOW_WEBSERVER_PID_FILE
export AIRFLOW_WEBSERVER_LOG_FILE
export AIRFLOW_WEBSERVER_DEBUG

script
    export PATH="${AIRFLOW_BINARY_PATH}:${PATH}"
    exec "${AIRFLOW_BINARY_PATH}/"airflow \
            webserver \
            --port "${AIRFLOW_WEBSERVER_PORT}" \
            --workers "${AIRFLOW_WEBSERVER_WORKERS}" \
            --workerclass "${AIRFLOW_WEBSERVER_WORKER_CLASS}" \
            --worker_timeout "${AIRFLOW_WEBSERVER_WORKER_TIMEOUT}" \
            --hostname "${AIRFLOW_WEBSERVER_HOSTNAME}" \
            --pid "${AIRFLOW_WEBSERVER_PID_FILE}" \
            --log-file "${AIRFLOW_WEBSERVER_LOG_FILE}" $AIRFLOW_WEBSERVER_DEBUG
end script
